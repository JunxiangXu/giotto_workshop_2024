[["index.html", "Workshop: Spatial multi-omics data analysis with Giotto Suite 1 Giotto Workshop 2024 1.1 Instructors 1.2 Topics and Schedule: 1.3 License", " Workshop: Spatial multi-omics data analysis with Giotto Suite Ruben Dries, Jiaji George Chen, Joselyn Cristina Chávez-Fuentes, Junxiang Xu , Edward Ruiz, Jeff Sheridan, Wen Wang 1 Giotto Workshop 2024 Workshop: Spatial multi-omics data analysis with Giotto Suite 1.1 Instructors Ruben Dries: Assistant Professor of Medicine at Boston University Joselyn Cristina Chávez Fuentes: Postdoctoral fellow at Icahn School of Medicine at Mount Sinai Jiaji George Chen Junxiang Xu Edward Ruiz Jeff Sheridan Wen Wang 1.2 Topics and Schedule: Day 1: Introduction Spatial omics technologies Spatial sequencing Spatial in situ Spatial proteomics spatial other: ATAC-seq, lipidomics, etc Introduction to the Giotto package Ecosystem Installation + python environment Giotto instructions Data formatting and Pre-processing Creating a Giotto object From matrix + locations From subcellular raw data (transcripts or images) + polygons Using convenience functions for popular technologies (Vizgen, Xenium, CosMx, …) Spatial plots Subsetting: Based on IDs Based on locations Visualizations Introduction to spatial multi-modal dataset (10X Genomics breast cancer) and goal for the next days Quality control Statistics Normalization Feature selection: Highly Variable Features: loess regression binned pearson residuals Spatial variable genes Dimension Reduction PCA UMAP/t-SNE Visualizations Clustering Non-spatial k-means Hierarchical clustering Leiden/Louvain Spatial Spatial variable genes Spatial co-expression modules Day 2: Spatial Data Analysis Spatial sequencing based technology: Visium Differential expression Enrichment &amp; Deconvolution PAGE/Rank SpatialDWLS Visualizations Interactive tools Spatial expression patterns Spatial variable genes Spatial co-expression modules Spatial HMRF Spatial sequencing based technology: Visium HD Tiling and aggregation Scalability (duckdb) and projection functions Spatial expression patterns Spatial co-expression module Spatial in situ technology: Xenium Read in raw data Transcript coordinates Polygon coordinates Visualizations Overlap txs &amp; polygons Typical aggregated workflow Feature/molecule specific analysis Visualizations Transcript enrichment GSEA Spatial location analysis Spatial cell type co-localization analysis Spatial niche analysis Spatial niche trajectory analysis Visualizations Spatial proteomics: multiplex IF Read in raw data Intensity data (IF or any other image) Polygon coordinates Visualizations Overlap intensity &amp; workflows Typical aggregated workflow Visualizations Day 3: Advanced Tutorials Multiple samples Create individual giotto objects JoinGiottoObjects Perform Harmony and default workflows Visualizations Spatial multi-modal Co-registration of datasets Examples in giotto suite manuscript Multi-omics integration Example in giotto suite manuscript Interoperability w/ other frameworks AnnData/SpatialData SpatialExperiment Seurat Interoperability w/ isolated tools Spatial niche trajectory analysis Interactivity with the R/Spatial ecosystem Kriging Contributing to Giotto 1.3 License This material has a Creative Commons Attribution-ShareAlike 4.0 International License. To get more information about this license, visit http://creativecommons.org/licenses/by-sa/4.0/ "],["spatial-omics-technologies.html", "2 Spatial omics technologies 2.1 Slides 2.2 Spatial sequencing", " 2 Spatial omics technologies Ruben Dries August 5th 2024 2.1 Slides 2.2 Spatial sequencing Spatial in situ Spatial proteomics spatial other: ATAC-seq, lipidomics, etc "],["introduction-to-the-giotto-package.html", "3 Introduction to the Giotto package 3.1 Slides 3.2 Ecosystem 3.3 Installation + python environment 3.4 Giotto instructions", " 3 Introduction to the Giotto package Ruben Dries August 5th 2024 3.1 Slides 3.2 Ecosystem 3.3 Installation + python environment 3.4 Giotto instructions "],["data-formatting-and-pre-processing.html", "4 Data formatting and Pre-processing 4.1 Data formats 4.2 Pre-processing", " 4 Data formatting and Pre-processing Jiaji George Chen August 5th 2024 4.1 Data formats some text 4.2 Pre-processing some text "],["creating-a-giotto-object.html", "5 Creating a Giotto object 5.1 From matrix + locations 5.2 From subcellular raw data (transcripts or images) + polygons 5.3 Using convenience functions for popular technologies (Vizgen, Xenium, CosMx, …) 5.4 Spatial plots 5.5 Subsetting", " 5 Creating a Giotto object Jiaji George Chen August 5th 2024 5.1 From matrix + locations some text 5.2 From subcellular raw data (transcripts or images) + polygons some text 5.3 Using convenience functions for popular technologies (Vizgen, Xenium, CosMx, …) some text 5.4 Spatial plots some text 5.5 Subsetting Based on IDs Based on locations Visualizations "],["visium-part-i.html", "6 Visium Part I 6.1 Introduction to spatial dataset 6.2 Create the Giotto object 6.3 Subset on spots that were covered by tissue 6.4 Quality control 6.5 Filtering 6.6 Normalization 6.7 Feature selection 6.8 Dimension Reduction 6.9 Clustering", " 6 Visium Part I Joselyn Cristina Chávez Fuentes August 5th 2024 6.1 Introduction to spatial dataset 10X genomics recently launched a new platform to obtain spatial expression data using a Visium Spatial Gene Expression slide. The Visium brain data to run this tutorial can be found here 6.2 Create the Giotto object library(Giotto) ## Set instructions results_folder &lt;- &quot;results/&quot; my_python_path &lt;- NULL instrs &lt;- createGiottoInstructions( save_dir = results_folder, save_plot = TRUE, show_plot = FALSE, python_path = my_python_path ) ## Provide path to visium folder data_path &lt;- &quot;data/&quot; ## Create object directly from visium folder visium_brain &lt;- createGiottoVisiumObject( visium_dir = data_path, expr_data = &quot;raw&quot;, png_name = &quot;tissue_lowres_image.png&quot;, gene_column_index = 2, instructions = instrs ) 6.3 Subset on spots that were covered by tissue ## show plot spatPlot2D( gobject = visium_brain, cell_color = &quot;in_tissue&quot;, point_size = 2, cell_color_code = c(&quot;0&quot; = &quot;lightgrey&quot;, &quot;1&quot; = &quot;blue&quot;), show_image = TRUE, image_name = &quot;image&quot; ) metadata &lt;- pDataDT(visium_brain) in_tissue_barcodes &lt;- metadata[in_tissue == 1]$cell_ID visium_brain &lt;- subsetGiotto(visium_brain, cell_ids = in_tissue_barcodes ) 6.4 Quality control Statistics visium_brain_statistics &lt;- addStatistics(gobject = visium_brain) ## visualize spatPlot2D(gobject = visium_brain_statistics, show_image = TRUE, point_alpha = 0.7, cell_color = &#39;nr_feats&#39;, color_as_factor = FALSE) 6.5 Filtering visium_brain &lt;- filterGiotto( gobject = visium_brain, expression_threshold = 1, feat_det_in_min_cells = 50, min_det_feats_per_cell = 1000, expression_values = c(&quot;raw&quot;), verbose = TRUE ) 6.6 Normalization visium_brain &lt;- normalizeGiotto( gobject = visium_brain, scalefactor = 6000, verbose = TRUE ) visium_brain &lt;- addStatistics(gobject = visium_brain) ## visualize spatPlot2D(gobject = visium_brain, show_image = TRUE, point_alpha = 0.7, cell_color = &#39;nr_feats&#39;, color_as_factor = FALSE) 6.7 Feature selection 6.7.1 Highly Variable Features: loess regression visium_brain &lt;- calculateHVF(gobject = visium_brain, method = &quot;cov_loess&quot;, save_plot = TRUE, return_plot = TRUE, default_save_name = &quot;HVFplot_loess&quot;) binned visium_brain &lt;- calculateHVF(gobject = visium_brain, method = &quot;cov_groups&quot;, save_plot = TRUE, return_plot = TRUE, default_save_name = &quot;HVFplot_binned&quot;) pearson residuals visium_brain &lt;- calculateHVF(gobject = visium_brain, method = &quot;var_p_resid&quot;, save_plot = TRUE, return_plot = TRUE, default_save_name = &quot;HVFplot_pearson&quot;) 6.7.2 Spatial variable genes my_spatial_genes &lt;- c(&quot;gene1&quot;, &quot;gene2&quot;, &quot;gene3&quot;) 6.8 Dimension Reduction PCA Default visium_brain &lt;- runPCA(gobject = visium_brain) Using specific genes visium_brain &lt;- runPCA(gobject = visium_brain, feats_to_use = my_spatial_genes) Screeplot screePlot(visium_brain, ncp = 30) Visualization plotPCA(visium_brain) UMAP visium_brain &lt;- runUMAP(visium_brain, dimensions_to_use = 1:10) plotUMAP(gobject = visium_brain) t-SNE visium_brain &lt;- runtSNE(visium_brain, dimensions_to_use = 1:10) plotTSNE(gobject = visium_brain) 6.9 Clustering 6.9.1 Non-spatial Create a sNN network (default) visium_brain &lt;- createNearestNetwork(gobject = visium_brain, dimensions_to_use = 1:10, k = 15) Create a kNN network visium_brain &lt;- createNearestNetwork(gobject = visium_brain, dimensions_to_use = 1:10, k = 15, type = &quot;kNN&quot;) Hierarchical clustering Calculate Leiden clustering visium_brain &lt;- doLeidenCluster(gobject = visium_brain, resolution = 0.4, n_iterations = 1000) Visualization plotPCA(gobject = visium_brain, cell_color = &#39;leiden_clus&#39;) plotUMAP(gobject = visium_brain, cell_color = &#39;leiden_clus&#39;, show_NN_network = FALSE, point_size = 2.5) plotUMAP(gobject = visium_brain, cell_color = &#39;leiden_clus&#39;, show_NN_network = TRUE, point_size = 2.5) plotTSNE(gobject = visium_brain, cell_color = &#39;leiden_clus&#39;) Dimension plots grouped by cluster spatPlot2D(visium_brain, cell_color = &#39;leiden_clus&#39;) 6.9.2 Spatial Spatial variable genes Spatial co-expression modules "],["visium-part-ii.html", "7 Visium Part II 7.1 Differential expression 7.2 Enrichment &amp; Deconvolution 7.3 Spatial expression patterns 7.4 Interactive tools", " 7 Visium Part II Joselyn Cristina Chávez Fuentes August 6th 2024 7.1 Differential expression text 7.2 Enrichment &amp; Deconvolution PAGE/Rank SpatialDWLS Visualizations 7.3 Spatial expression patterns Spatial variable genes Rank binarization ranktest = binSpect(visium_brain, bin_method = &#39;rank&#39;, calc_hub = TRUE, hub_min_int = 5, spatial_network_name = &#39;spatial_network&#39;) Visualize spatFeatPlot2D(visium_brain, expression_values = &#39;scaled&#39;, feats = ranktest$feats[1:6], cow_n_col = 2, point_size = 1.5) Spatial co-expression modules Cluster the top 500 spatial genes into 20 clusters ext_spatial_genes = ranktest[1:1500,]$feats Use existing detectSpatialCorGenes function to calculate pairwise distances between genes (but set network_smoothing=0 to use default clustering) spat_cor_netw_DT = detectSpatialCorFeats(visium_brain, method = &#39;network&#39;, spatial_network_name = &#39;spatial_network&#39;, subset_feats = ext_spatial_genes) Identify most similar spatially correlated genes for one gene top10_genes = showSpatialCorFeats(spat_cor_netw_DT, feats = &#39;Ptprn&#39;, show_top_feats = 10) Visualize spatFeatPlot2D(visium_brain, expression_values = &#39;scaled&#39;, feats = top10_genes$variable[1:4], point_size = 3) Cluster spatial genes spat_cor_netw_DT = clusterSpatialCorFeats(spat_cor_netw_DT, name = &#39;spat_netw_clus&#39;, k = 20) Visualize clusters heatmSpatialCorFeats(visium_brain, spatCorObject = spat_cor_netw_DT, use_clus_name = &#39;spat_netw_clus&#39;, heatmap_legend_param = list(title = NULL), save_param = list(base_height = 6, base_width = 8, units = &#39;cm&#39;)) Rank spatial correlated clusters and show genes for selected clusters netw_ranks = rankSpatialCorGroups(visium_brain, spatCorObject = spat_cor_netw_DT, use_clus_name = &#39;spat_netw_clus&#39;, save_param = list(base_height = 3, base_width = 5)) top_netw_spat_cluster = showSpatialCorFeats(spat_cor_netw_DT, use_clus_name = &#39;spat_netw_clus&#39;, selected_clusters = 6, show_top_feats = 1) Create metagene enrichment score for clusters cluster_genes_DT = showSpatialCorFeats(spat_cor_netw_DT, use_clus_name = &#39;spat_netw_clus&#39;, show_top_feats = 1) cluster_genes = cluster_genes_DT$clus names(cluster_genes) = cluster_genes_DT$feat_ID visium_brain &lt;- createMetafeats(visium_brain, feat_clusters = cluster_genes, name = &#39;cluster_metagene&#39;) spatCellPlot(visium_brain, spat_enr_names = &#39;cluster_metagene&#39;, cell_annotation_values = netw_ranks$clusters, point_size = 1, cow_n_col = 5, save_param = list(base_width = 15)) Spatially informed clusters Get the top 30 genes per spatial co-expression cluster table(spat_cor_netw_DT$cor_clusters$spat_netw_clus) coexpr_dt = data.table::data.table(genes = names(spat_cor_netw_DT$cor_clusters$spat_netw_clus), cluster = spat_cor_netw_DT$cor_clusters$spat_netw_clus) data.table::setorder(coexpr_dt, cluster) top30_coexpr_dt = coexpr_dt[, head(.SD, 30) , by = cluster] my_spatial_genes = top30_coexpr_dt$genes Re-calculate the clustering visium_brain &lt;- runPCA(gobject = visium_brain, feats_to_use = my_spatial_genes, name = &#39;custom_pca&#39;) visium_brain &lt;- runUMAP(visium_brain, dim_reduction_name = &#39;custom_pca&#39;, dimensions_to_use = 1:20, name = &#39;custom_umap&#39;) visium_brain &lt;- createNearestNetwork(gobject = visium_brain, dim_reduction_name = &#39;custom_pca&#39;, dimensions_to_use = 1:20, k = 5, name = &#39;custom_NN&#39;) visium_brain &lt;- doLeidenCluster(gobject = visium_brain, network_name = &#39;custom_NN&#39;, resolution = 0.15, n_iterations = 1000, name = &#39;custom_leiden&#39;) cell_meta = pDataDT(visium_brain) cell_clusters = unique(cell_meta$custom_leiden) selected_colors = getDistinctColors(length(cell_clusters)) names(selected_colors) = cell_clusters Visualize spatPlot2D(visium_brain, cell_color = &#39;custom_leiden&#39;, cell_color_code = selected_colors, coord_fix_ratio = 1) plotUMAP(gobject = visium_brain, cell_color = &#39;custom_leiden&#39;, cell_color_code = selected_colors, point_size = 1.5) Spatial domains HMRF Do HMRF with different betas on top 30 genes per spatial co-expression module hmrf_folder = paste0(results_folder,&#39;/&#39;,&#39;11_HMRF/&#39;) if(!file.exists(hmrf_folder)) dir.create(hmrf_folder, recursive = T) HMRF_spatial_genes = doHMRF(gobject = visium_brain, expression_values = &#39;scaled&#39;, spatial_genes = my_spatial_genes, k = 20, spatial_network_name=&quot;spatial_network&quot;, betas = c(0, 10, 5), output_folder = paste0(hmrf_folder, &#39;/&#39;, &#39;Spatial_genes/SG_topgenes_k20_scaled&#39;)) visium_brain &lt;- addHMRF(gobject = visium_brain, HMRFoutput = HMRF_spatial_genes, k = 20, betas_to_add = c(0, 10, 20, 30, 40), hmrf_name = &#39;HMRF&#39;) spatPlot2D(gobject = visium_brain, cell_color = &#39;HMRF_k20_b.40&#39;) 7.4 Interactive tools text "],["visium-hd.html", "8 Visium HD 8.1 Tiling and aggregation 8.2 Scalability and projection functions 8.3 Spatial expression patterns 8.4 Spatial co-expression modules", " 8 Visium HD Eddie August 6th 2024 8.1 Tiling and aggregation text 8.2 Scalability and projection functions duckdb 8.3 Spatial expression patterns text 8.4 Spatial co-expression modules text "],["xenium.html", "9 Xenium 9.1 Read in raw data 9.2 Overlap txs &amp; polygons 9.3 Transcript enrichment GSEA 9.4 Spatial location analysis 9.5 Visualizations", " 9 Xenium Jiaji George Chen August 6th 2024 9.1 Read in raw data Transcript coordinates Polygon coordinates Visualizations 9.2 Overlap txs &amp; polygons Typical aggregated workflow Feature/molecule specific analysis Visualizations 9.3 Transcript enrichment GSEA text 9.4 Spatial location analysis Spatial cell type co-localization analysis Spatial niche analysis Spatial niche trajectory analysis 9.5 Visualizations "],["spatial-proteomics-multiplex-if.html", "10 Spatial proteomics: multiplex IF 10.1 Read in raw data 10.2 Overlap intensity &amp; workflows", " 10 Spatial proteomics: multiplex IF Junxiang August 6th 2024 10.1 Read in raw data Intensity data (IF or any other image) Polygon coordinates Visualizations 10.2 Overlap intensity &amp; workflows Typical aggregated workflow Visualizations "],["working-with-multiple-samples.html", "11 Working with multiple samples 11.1 Create individual giotto objects 11.2 Join Giotto Objects 11.3 Perform Harmony and default workflows 11.4 Visualizations", " 11 Working with multiple samples Jeff August 7th 2024 11.1 Create individual giotto objects 11.2 Join Giotto Objects 11.3 Perform Harmony and default workflows 11.4 Visualizations "],["spatial-multi-modal-analysis.html", "12 Spatial multi-modal analysis 12.1 Co-registration of datasets 12.2 Examples in giotto suite manuscript", " 12 Spatial multi-modal analysis Junxiang August 7th 2024 12.1 Co-registration of datasets text 12.2 Examples in giotto suite manuscript text "],["multi-omics-integration.html", "13 Multi-omics integration 13.1 Example in giotto suite manuscript", " 13 Multi-omics integration Joselyn Cristina Chávez Fuentes August 7th 2024 13.1 Example in giotto suite manuscript text "],["interoperability-with-other-frameworks.html", "14 Interoperability with other frameworks 14.1 AnnData/SpatialData 14.2 SpatialExperiment 14.3 Seurat", " 14 Interoperability with other frameworks Iqra August 7th 2024 14.1 AnnData/SpatialData text 14.2 SpatialExperiment text 14.3 Seurat text "],["interoperability-with-isolated-tools.html", "15 Interoperability with isolated tools 15.1 Spatial niche trajectory analysis", " 15 Interoperability with isolated tools Wen Wang August 7th 2024 15.1 Spatial niche trajectory analysis text "],["interactivity-with-the-rspatial-ecosystem.html", "16 Interactivity with the R/Spatial ecosystem 16.1 Kriging", " 16 Interactivity with the R/Spatial ecosystem Jeff August 7th 2024 16.1 Kriging text "],["contributing-to-giotto.html", "17 Contributing to Giotto 17.1 Contribution guideline", " 17 Contributing to Giotto Jiaji George Chen August 7th 2024 17.1 Contribution guideline https://drieslab.github.io/Giotto_website/CONTRIBUTING.html "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
